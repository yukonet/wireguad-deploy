---
######################################
# ANSIBLE PLAYBOOK FOR WG INSTALLING #
######################################


- name: "Install Wireguard"
  hosts: all
  remote_user: root

  vars_prompt:

  - name: "interface"
    prompt: "What interface should I use?"
    default: "eth0"
    private: no

  - name: "uidir"
    prompt: "Set directory to store UI files or use default (recommended)"
    default: "/opt/wireguard-ui"
    private: no

  tasks:

  - name: "Install wireguard"
    ansible.builtin.apt:
      name: wireguard
      state: latest
       update_cache: yes

   - name: "Install docker-compose"
     ansible.builtin.apt:
       name: docker-compose
       state: latest
       update_cache: yes

   - name: "Install docker"
     ansible.builtin.apt:
       name: docker
       state: latest
       
  - name: "Create server keys"
    shell: wg genkey | tee /etc/wireguard/server.priv | wg pubkey > /etc/wireguard/server.pub
    args:
      executable: /bin/bash

  - name: "Register server public key"
    shell: cat /etc/wireguard/server.pub
    register: server_pub

  - name: "Register server private key"
    shell: cat /etc/wireguard/server.priv
    register: server_priv

  - name: "Get public IP address"
    get_url: 
      url: http://ifconfig.me
      http_agent: curl
      dest: /tmp/public_ip    

  - name: "Register server public IP"
    shell: cat /tmp/public_ip
    register: public_ip

  - name: "Create server config file"
    copy:
      dest: "/etc/wireguard/wg0.conf"
      content: |
          [Interface]
          PrivateKey = {{ server_priv.stdout }}
          Address = 10.0.0.1/24
          PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o {{ interface }} -j MASQUERADE; echo 1 > /proc/sys/net/ipv4/ip_forward
          PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o {{ interface }} -j MASQUERADE; echo 0 > /proc/sys/net/ipv4/ip_forward
          ListenPort = 51820

  - name: "Start WireGuard"
    shell:
      cmd: systemctl start wg-quick@wg0
    args:
      executable: /bin/bash

  - name: "Enable WireGuard"
    shell:
      cmd: systemctl enable wg-quick@wg0
    args:
      executable: /bin/bash
    
      ##############################
      # adding UI to the wireguard #
      ##############################


  - name: "Get github files"
    ansible.builtin.git:
      repo: "https://github.com/ngoduykhanh/wireguard-ui.git"
      dest: "{{ uidir }}/"
     
  - name: "First UI start for ctreating UI config files"
    shell: docker-compose up -d
    args: 
      chdir: "{{ uidir }}/"

  - name: "Change server private key in the UI config file"
    replace:
      path: "{{ uidir }}/db/server/keypair.json"
      regexp: 'private_key(.*)$'
      replace: "private_key\": \"{{ server_priv.stdout }}\"," 

  - name: "Change server public key in the UI config file"
    replace:
      path: "{{ uidir }}/db/server/keypair.json"
      regexp:  'public_key(.*)$'
      replace: "public_key\": \"{{ server_pub.stdout }}\","

  - name: "Change postup script in server's config"
    replace:
      path: "{{ uidir }}/db/server/interfaces.json"
      regexp: 'post_up(.*)$'
      replace: "post_up\": \"iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o {{ interface }} -j MASQUERADE; echo 1 > /proc/sys/net/ipv4/ip_forward\","

  - name: "Change postdown script in server's config"
    replace:
      path: "{{ uidir }}/db/server/interfaces.json"
      regexp:  'post_down(.*)$'
      replace: "post_down\": \"iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o {{ interface }} -j MASQUERADE; echo 0 > /proc/sys/net/ipv4/ip_forward\""

